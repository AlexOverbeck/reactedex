{"version":3,"sources":["reportWebVitals.js","api/query.js","components/Details.js","components/Screen.js","components/Search.js","components/Pokedex.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","SEARCH_QUERY","gql","Details","props","description","pokemon","String","replace","className","name","id","Screen","useState","alt","src","image","setImage","useEffect","Search","inputValue","setInputValue","setSearch","timeoutId","setTimeout","clearTimeout","htmlFor","placeholder","value","onChange","event","target","Pokedex","search","setPokemon","useLazyQuery","searchPokemon","data","called","loading","error","variables","length","nextPokemon","Math","floor","random","console","log","flavor_text","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","ApolloProvider","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cd81d62f.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { gql } from \"@apollo/client\";\n\nexport const SEARCH_QUERY = gql`\n  query pokemon($search: String!) {\n    pokemon: pokemon_v2_pokemonspecies(where: {name: {_iregex: $search}}) {\n      id\n      name\n      description: pokemon_v2_pokemonspeciesflavortexts(limit: 1, where: {language_id: {_eq: 9}}) {\n        flavor_text\n      }\n    }\n  }\n`;","import \"./Details.css\";\n\nfunction Details(props){\n  const description = props.pokemon ? String(props.pokemon.description).replace(/\\/n|\\/f/, \" \") : \"\";\n\n  return (\n    <div className=\"details\">\n      <h1 className=\"details__title\">{props.pokemon.name}</h1>\n      <h2 className=\"details__subtitle\">#{props.pokemon.id}</h2>\n      <div className=\"details__description\">\n        <p>{description}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default Details;","import { useEffect, useState } from \"react\";\n\nimport Details from \"./Details\";\nimport \"./Screen.css\"\n\nfunction Screen(props) {\n  const [image, setImage] = useState({\n    alt: \"The silhouette of a mystery pokemon\",\n    src: \"/whos-that-bulba.svg\",\n  });\n\n  useEffect(() => {\n    if (\"id\" in props.pokemon) {\n      const baseUrl = \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/\";\n      setImage({\n        alt: `a happy looking ${props.pokemon.name}`,\n        src: baseUrl + `${props.pokemon.id}.png`\n      });\n    }\n  }, [props.pokemon])\n\n  return (\n    <div className=\"screen\">\n      <div className=\"screen__image\">\n        <img src={image.src} alt={image.alt} />\n      </div>\n      <Details pokemon={props.pokemon} />\n    </div>\n  );\n}\n\nexport default Screen;\n","import { useEffect, useState } from \"react\";\n\nimport './Search.css'\n\nfunction Search(props) {\n  const [inputValue, setInputValue] = useState(\"\");\n\n  useEffect(()=>{\n    if (props.setSearch) {\n      const timeoutId = setTimeout(() => props.setSearch(inputValue), 1000);\n      return () => clearTimeout(timeoutId);\n    }\n  }, [inputValue]);\n\n  return (\n    <form className=\"search\">\n      <label className=\"search__label\" htmlFor=\"search-input\">\n        <span className=\"search__label-text\">Search for a pokemon</span>\n      </label>\n      <input\n        id=\"search-input\"\n        className=\"search__input\"\n        name=\"search\"\n        placeholder=\"Search for a pokemon\"\n        value={inputValue}\n        onChange={(event) => setInputValue(event.target.value)}\n      />\n    </form>\n  );\n}\n\nexport default Search;\n","import { useState, useEffect } from \"react\";\nimport { SEARCH_QUERY } from '../api/query';\nimport { useLazyQuery } from \"@apollo/client\";\n\nimport './Pokedex.css';\nimport Screen from './Screen';\nimport Search from './Search';\n\nfunction Pokedex(){\n  const [search, setSearch] = useState(\"\");\n  const [pokemon, setPokemon] = useState({});\n  const [searchPokemon, {called, loading, data, error}] = useLazyQuery(SEARCH_QUERY);\n\n  useEffect(()=>{\n    searchPokemon({\n      variables: { search: search }\n    });\n  }, [search]);\n\n  useEffect(()=>{\n    if (data && data.pokemon.length) {\n      let nextPokemon = data.pokemon[0];\n\n      if (data.pokemon.length > 1) {\n        nextPokemon = data.pokemon[Math.floor(Math.random()*data.pokemon.length)]\n      }\n      console.log(\"next\", data);\n      console.log(\"next\", nextPokemon);\n\n      setPokemon({\n        id: nextPokemon.id,\n        name: nextPokemon.name,\n        description: nextPokemon.description[0].flavor_text,\n      });\n    }\n  }, [data]);\n\n  if (error) {\n    return <p>Error :(</p>\n  }\n\n  return (\n    <div className=\"pokedex\">\n      <div className=\"pokedex__top\">\n        <div className=\"pokedex__camera\"></div>\n        <div className=\"pokedex__light pokedex__light--red\"></div>\n        <div className=\"pokedex__light pokedex__light--yellow\"></div>\n        <div className=\"pokedex__light pokedex__light--green\"></div>\n        <div className=\"pokedex__form\">\n          <Search setSearch={setSearch} />\n        </div>\n      </div>\n      <div className=\"pokedex__bottom\">\n        <Screen pokemon={pokemon}/>\n      </div>\n    </div>\n  );\n}\n\nexport default Pokedex;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport { ApolloClient, ApolloProvider, InMemoryCache } from \"@apollo/client\";\n\nimport './index.css';\n\nimport Pokedex from './components/Pokedex';\n\nconst client = new ApolloClient({\n  uri: 'https://beta.pokeapi.co/graphql/v1beta',\n  cache: new InMemoryCache()\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <React.StrictMode>\n      <Pokedex />\n    </React.StrictMode>\n  </ApolloProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}